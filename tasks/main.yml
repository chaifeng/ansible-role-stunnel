---
- name: 'Ensure stunnel'
  homebrew: name=stunnel
  when: ansible_os_family == "Darwin"

- block:
    - name: 'Ensure libssl-dev'
      apt: name=libssl-dev
    
    - name: 'Download stunnel {{ stunnel.version }}'
      get_url: >
        url="https://www.stunnel.org/downloads/stunnel-{{ stunnel.version }}.tar.gz"
        dest="/usr/src/stunnel-{{ stunnel.version }}.tar.gz"
    
    - name: 'Compile stunnel'
      shell: |
        set -e
        cd /usr/src
        test -d "stunnel-{{ stunnel.version }}" && rm -r "stunnel-{{ stunnel.version }}"
        tar zxf "stunnel-{{ stunnel.version }}.tar.gz"
        cd "stunnel-{{ stunnel.version }}"
        ./configure && make
        cp src/stunnel "{{ stunnel.exec }}-{{ stunnel.version }}.bin"
    
        test -L "{{ stunnel.exec }}" && rm "{{ stunnel.exec }}"
    
        ln -s "{{ stunnel.exec }}-{{ stunnel.version }}.bin" "{{ stunnel.exec }}"
        ln -s "{{ stunnel.exec }}-{{ stunnel.version }}.bin" "{{ stunnel.exec }}-{{ stunnel.version }}"
      args:
        creates: "{{ stunnel.exec }}-{{ stunnel.version }}"
  when: ansible_os_family == "Debian"

- name: Ensure stunnel directories
  file: path="{{ item }}" state=directory
  with_items:
    - "{{ stunnel.chroot }}"
    - "{{ stunnel.confdir }}"

- block:
    - name: 'Ensure PSKsecrets'
      copy:
        content: "{{ stunnel.psk }}"
        dest: "{{stunnel.confdir }}/{{ stunnel.name }}.secrets"
        mode: go-rwx
      when: stunnel.psk is defined and stunnel.psk
      tags:
        - stunnel
        - stunnel_psk
    
    - name: "ensure {{ stunnel.name }}.conf"
      template: src=stunnel.conf.j2 dest="{{ stunnel.confdir }}/{{ stunnel.name }}.conf"
      notify:
        - 'Reload stunnel configurations'
      tags:
        - stunnel
        - stunnel_conf
    
    - name: 'certificate for stunnel: {{ stunnel.cert }}.pem'
      copy: src={{ stunnel.cert }}.pem dest="{{ stunnel.confdir }}/" mode=0600
      when: stunnel.cert is defined
      notify:
        - 'Reload stunnel configurations'
      tags:
        - stunnel
        - stunnel_cert
    
    - name: 'Allow listening port'
      ufw: rule=allow port="{{ stunnel.accept }}" proto=tcp
      when: ansible_os_family == "Debian"
  when: stunnel.disable == false
